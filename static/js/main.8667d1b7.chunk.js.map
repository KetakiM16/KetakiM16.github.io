{"version":3,"sources":["features/features/userSlice.js","HeaderOption.js","firebase.js","Header.js","Sidebar.js","InputOptions.js","Post.js","Feed.js","Login.js","Widgets.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","avatar","Icon","title","onClick","useSelector","className","style","backgroundColor","size","icon","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","Header","dispatch","useDispatch","src","alt","placeholder","type","TiHome","MdSupervisorAccount","RiHandbagFill","BsFillChatDotsFill","MdNotifications","signOut","Sidebar","recentitem","topic","shape","displayName","InputOptions","color","classNam","Post","forwardRef","ref","description","message","photoUrl","AiOutlineLike","FaRegCommentDots","RiShareForwardFill","IoIosSend","Feed","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","preventDefault","add","timestamo","FieldValue","serverTimestamp","ImImage","RiVideoFill","RiCalendarEventFill","RiArticleLine","Login","setEmail","password","setPassword","setName","profilepic","setProfilepic","signInWithEmailAndPassword","then","userAuth","uid","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","store","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8667d1b7.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const userSlice = createSlice({\n  name: 'user ',\n  initialState:{\n     user : null, \n  },\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    login: (state,action) => {\n      \n      state.user = action.payload;\n    },\n    \n    // Use the PayloadAction type to declare the contents of `action.payload`\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  \n});\n\nexport const { login, logout } = userSlice.actions;\n\n// pulling in selector from layesr\nexport const selectUser = (state) => state.user.user;\n\n\nexport default userSlice.reducer;\n","import { Avatar } from 'antd'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from './features/features/userSlice'\r\nimport './HeaderOption.css'\r\n// import {Avatar} from 'antd'\r\nfunction HeaderOption({ avatar, Icon, title,onClick}) {\r\n    const user = useSelector(selectUser);\r\n    return (\r\n        <div onClick={onClick} className=\"headerOption\">\r\n            {Icon && <Icon className=\"headeroption_icon\"></Icon>   }\r\n            {avatar && <Avatar className=\"headeroption_icon\"  style={{backgroundColor: 'lightgray'   }} size={20} icon={user?.email[0]} >{user?.email[0]}</Avatar>}\r\n           <h3 className=\"headeroption_title\">{title}</h3>\r\n            \r\n        </div>\r\n    )\r\n}\r\n \r\nexport default HeaderOption\r\n","import firebase from 'firebase'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAWYGu1IwWCNP0X6LvR86hdJI4kGAUxXQg\",\r\n    authDomain: \"linkedln-clone-fce15.firebaseapp.com\",\r\n    projectId: \"linkedln-clone-fce15\",\r\n    storageBucket: \"linkedln-clone-fce15.appspot.com\",\r\n    messagingSenderId: \"353737356235\",\r\n    appId: \"1:353737356235:web:54d3f76a8fb34a9964bc4e\"\r\n  };\r\n   const firebaseApp = firebase.initializeApp(firebaseConfig)\r\n   const db = firebaseApp.firestore();\r\n   const auth = firebase.auth();\r\n\r\n\r\n   export {db,auth};","import React from 'react'\r\nimport './Header.css'\r\nimport { ImSearch} from \"react-icons/im\"\r\nimport HeaderOption from './HeaderOption'\r\nimport {TiHome} from 'react-icons/ti'\r\nimport {MdSupervisorAccount } from  'react-icons/md'\r\nimport {RiHandbagFill} from 'react-icons/ri'\r\n import  {BsFillChatDotsFill} from 'react-icons/bs'\r\n import {MdNotifications} from 'react-icons/md'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { auth } from './firebase'\r\nimport {logout, selectUser} from './features/features/userSlice'\r\n\r\nfunction Header() {\r\n    const user = useSelector(selectUser)\r\n    const dispatch = useDispatch();\r\n    const logoutofApp =()=>{\r\n        dispatch(logout())\r\n        auth.signOut()\r\n    }\r\n    return (\r\n        <div className=\"header\">\r\n           \r\n            {/* <h1>This is header</h1> */}\r\n            <div className=\"header_left\">\r\n                     <img src =\"https://cdn-icons-png.flaticon.com/512/1409/1409945.png\" alt =\"\">\r\n\r\n                     </img>\r\n             {/* serch icon */}\r\n             <div className=\"header_search\">\r\n             <ImSearch/>\r\n                  {/* serch text box */}\r\n                <input placeholder=\"Search\" type=\"text\"></input> \r\n             </div>\r\n            </div>\r\n            <div className=\"header_right\">\r\n                  <HeaderOption Icon =  {TiHome} title= \"Home\"></HeaderOption>\r\n                  <HeaderOption  Icon ={MdSupervisorAccount} title = \"My Network\"></HeaderOption>\r\n                  <HeaderOption Icon ={RiHandbagFill} title= \"job\"></HeaderOption>\r\n                  <HeaderOption Icon ={BsFillChatDotsFill} title =\"Messaging\"></HeaderOption>\r\n                  <HeaderOption Icon={MdNotifications} title =\"Notification\"></HeaderOption>\r\n                  <HeaderOption \r\n                   avatar = {true} title =\"me\"\r\n                   onClick={logoutofApp}></HeaderOption>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { Avatar } from 'antd'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from './features/features/userSlice'\r\nimport './Sidebar.css'\r\nfunction Sidebar() {\r\n    // getting user store layer left hand side\r\n    const user = useSelector(selectUser)\r\n    const recentitem = (topic)=>(\r\n        <div className =\"sidebar_recentItem\">\r\n            <span className='sidebar_hash'>#</span>\r\n            <p>{topic}</p>\r\n        </div>\r\n    )\r\n    return (\r\n        <div className=\"sidebar\">\r\n           <div className= \"sidebar_top\">\r\n               {/* // background image*/}\r\n               <img src=\" https://png.pngtree.com/background/20210712/original/pngtree-abstract-connection-dots-technology-background-picture-image_1177231.jpg\" alt = \"\"/>\r\n               {/* // upward name */}\r\n               {/* <Avatar src = {user.photoUrl} \r\n               style={{backgroundColor: '#fde3cf',size: '64',shape:\"cirlcle\" }} className=\"sidebar_avatar\">{user.email[0]} \r\n                                </Avatar> */}\r\n                  <Avatar style={{ backgroundColor: 'lightgray' }} icon={user.email[0]} shape=\"circle\" size={40} > {user.email[0]}</Avatar>             \r\n               <h2 >{user.displayName}</h2>\r\n               <h4>{user.email}</h4>\r\n           </div>\r\n            <div className=\"sidebar_stats\">\r\n                  <div className=\"sidebar__stat\">\r\n                     <p>Who view your</p>\r\n                     <p className=\"sidebar_statsNumber\">1612</p>\r\n\r\n                  </div>\r\n                  <div className= 'sidebar__stat'>\r\n                  <p> view on post</p>\r\n                     <p className=\"sidebar_statsNumber\">1612</p>\r\n\r\n                 </div>\r\n                 <div className= 'sidebar_bottom'>\r\n                  <p>Recent</p>\r\n                  {recentitem('reactjs')}\r\n                  {recentitem('engineering')}\r\n                  {recentitem('sowftware')}\r\n                 \r\n                  </div>\r\n                 </div>\r\n           </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport './InputOption.css'\r\nfunction InputOptions({title,Icon,color}) {\r\n    return (\r\n        <div classNam=\"inputOptions\">\r\n            <Icon style={{color:color}}></Icon>\r\n            <h4>{title}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputOptions;\r\n","import { Avatar } from 'antd'\r\nimport React,{forwardRef }from 'react'\r\nimport InputOptions from './InputOptions'\r\nimport './Post.css'\r\nimport{AiOutlineLike} from 'react-icons/ai'\r\nimport{FaRegCommentDots} from 'react-icons/fa'\r\nimport{RiShareForwardFill} from 'react-icons/ri'\r\nimport{IoIosSend} from 'react-icons/io'\r\nconst Post = forwardRef(({name,description, message,photoUrl},ref)=> {\r\n    return (\r\n        <div ref={ref} className=\"post\">\r\n            <div className='post_header'>\r\n                <Avatar src={photoUrl}  style={{backgroundColor: 'lightgray' }} size={25}  icon={name[0]}>{name[0]}</Avatar>\r\n                <div className=\"post_info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{description}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"post_body\">\r\n                <p>{message}</p>\r\n\r\n            </div>\r\n            <div className=\"post_buttons\">\r\n                <InputOptions Icon ={AiOutlineLike} title='Like'\r\n                color=\"gray\"></InputOptions>\r\n                <InputOptions Icon ={FaRegCommentDots}\r\n                title=\"comment\"\r\n                color ='gray'></InputOptions>\r\n                <InputOptions Icon ={RiShareForwardFill}\r\n                title = \"share\"\r\n                color =\"gray\"></InputOptions>\r\n                <InputOptions Icon ={IoIosSend}\r\n                title ='Send'\r\n                color =\"gray\"></InputOptions>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Post\r\n","import React,{useState,useEffect} from 'react'\r\nimport './Feed.css'\r\nimport{GoPencil} from 'react-icons/go'\r\nimport InputOptions from './InputOptions'\r\nimport {ImImage} from 'react-icons/im'\r\nimport{RiVideoFill} from 'react-icons/ri'\r\nimport{RiCalendarEventFill} from 'react-icons/ri'\r\nimport{RiArticleLine} from 'react-icons/ri';\r\nimport Post from './Post'\r\nimport { db } from './firebase'\r\nimport firebase from 'firebase'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectUser } from './features/features/userSlice'\r\nimport FlipMove from 'react-flip-move'\r\nfunction Feed() {\r\n    const user = useSelector(selectUser);\r\n    const[input, setInput] = useState('')\r\n    const [posts,setPosts] = useState([]) \r\n\r\n    useEffect(()=>{\r\n        db.collection(\"posts\").orderBy(\"timestamo\",\"desc\").onSnapshot((snapshot)=> \r\n        setPosts(\r\n             snapshot.docs.map((doc)=>({\r\n                 id : doc.id,\r\n                 data: doc.data(),\r\n\r\n             }))\r\n        )\r\n        )\r\n        \r\n    },[])\r\n    const sendPost = (e)=>{\r\n        e.preventDefault();\r\n      db.collection(\"posts\").add({\r\n          name :user.displayName,\r\n          description:user.email,\r\n          message: input,\r\n          photoUrl: user.photoUrl || \" \",\r\n          timestamo : firebase.firestore.FieldValue.serverTimestamp()\r\n\r\n      })\r\n      setInput('');\r\n    }\r\n    return (\r\n        <div className= \"feed\">\r\n            <div className='feed_inputcontainer'>\r\n                <div className=\"feed_input\">\r\n                  <GoPencil/>\r\n                  <form >\r\n                      <input  value = {input} \r\n                      onChange={(e)=>\r\n                        setInput(e.target.value)}  type ='text'/>\r\n                      <button onClick={sendPost} type=\"submit\">Send</button>\r\n\r\n                  </form>\r\n\r\n                </div>\r\n                <div className=\"feed_inptOption\">\r\n                    <InputOptions Icon = {ImImage}\r\n                    title= \"Photo\" color = \"#70B5F9\"/>\r\n                     <InputOptions Icon = {RiVideoFill}\r\n                    title= \"Video\" color = \"#E7A33E\"/>\r\n                     <InputOptions Icon = {RiCalendarEventFill}\r\n                    title= \"Event\" color = \"#C0CBCD\"/>\r\n                     <InputOptions Icon = {RiArticleLine}\r\n                    title= \"Write article\" color = \"#7fC159\"/>\r\n                </div>\r\n            </div>\r\n            {/* post */}\r\n            <FlipMove>\r\n            {posts.map(({id, data :{name, description,message,photoUrl}})=>(\r\n              <Post\r\n               key ={id}\r\n               name ={name}\r\n               description={description}\r\n               message={message}\r\n               photoUrl={photoUrl}>\r\n\r\n              </Post>\r\n            )\r\n            )}\r\n            </FlipMove>\r\n           </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import React,{useState} from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { auth } from './firebase'\r\nimport { login } from './features/features/userSlice'\r\nimport \"./Login.css\"\r\nfunction Login() {\r\n    const[email,setEmail]= useState(\"\")\r\n    const[password,setPassword] = useState(\"\")\r\n    const[name,setName] = useState('')\r\n    const[profilepic,setProfilepic]= useState('')\r\n    const dispatch = useDispatch();\r\nconst loginToapp =(e)=>{\r\n    \r\n    e.preventDefault();\r\n       auth.signInWithEmailAndPassword(email,password)\r\n       .then(userAuth=>{\r\n           dispatch(login({\r\n            email : userAuth.user.email,\r\n            uid : userAuth.user.uid,\r\n            displayName :userAuth.user.displayName,\r\n            photoUrl : userAuth.user.photoURL\r\n           })\r\n           )\r\n       })\r\n       .catch(error=>alert(error))\r\n    }\r\n    const register =()=>{\r\n        if(!name){\r\n            return alert(\"please enter a full name\")\r\n        }\r\n\r\n        auth.createUserWithEmailAndPassword(email,password)\r\n        .then((userAuth)=>{\r\n            userAuth.user.updateProfile ({\r\n                displayName : name,\r\n                photoUrl :   profilepic,\r\n            })\r\n            //dispatching into store after geting user at login page\r\n            .then(()=>{\r\n                dispatch(\r\n                    login ({\r\n                    email : userAuth.user.email,\r\n                    uid : userAuth.user.uid,\r\n                    displayName :name,\r\n                    photoUrl : profilepic\r\n                }))\r\n            })\r\n        })\r\n        .catch((error)=> alert(error))\r\n    }\r\n       \r\n    return (\r\n        <div className=\"login\">\r\n            <img src ='https://www.pngfind.com/pngs/m/123-1232187_linkedin-icon-linkedin-hd-png-download.png'\r\n            alt =\"\"></img>\r\n            <form>\r\n                <input  value={name} \r\n                onChange ={(e)=>setName(e.target.value)}\r\n                type ='text' placeholder=\"Full Name reqired to register\"></input>\r\n                \r\n                <input type ='text' placeholder=\"Profile pic url (optional)\"\r\n                value ={profilepic}\r\n                onChange ={(e)=>setProfilepic(e.target.value)}\r\n                ></input>\r\n                <input  placeholder=\"Email\" \r\n                type ='email' \r\n                value={email}\r\n                onChange={(e)=>setEmail(e.target.value)}    />\r\n                \r\n                <input  placeholder=\"Password\" \r\n                type ='password' \r\n                value ={password}\r\n                onChange ={(e)=> setPassword(e.target.value)}  />\r\n                <button type= \"submit\" onClick={loginToapp}>Sign in</button>\r\n            </form>\r\n        <p>Not a member ?{\" \"}\r\n        <span className=\"login_register\" onClick={register}>Register now</span>\r\n        </p>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport './Widgets.css'\r\nimport{BsFillInfoCircleFill} from \"react-icons/bs\"\r\nimport{GoPrimitiveDot} from \"react-icons/go\"\r\nfunction Widgets() {\r\n    const newsArticle = (heading, subtitle)=>(\r\n        <div className=\"widget_article\">\r\n           \r\n             <div className=\"widgets_articleleft\">\r\n               <GoPrimitiveDot></GoPrimitiveDot>\r\n             </div>\r\n             <div className=\"widgets_articleright\">\r\n                 <h4>{heading}</h4>\r\n                 <p>{subtitle}</p>\r\n\r\n             </div>\r\n\r\n        </div>\r\n    )\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"widgets_header\">\r\n                <h2>Linkedln News</h2>\r\n                <BsFillInfoCircleFill></BsFillInfoCircleFill>\r\n            </div>\r\n            {newsArticle(\"CoronaVirus India update\",\"Top news-2161 reders \")}\r\n            {newsArticle(\"Bitcon hit the graph \",\"Top news-2161 reders \")}\r\n            {newsArticle(\"Taliban News \",\"Top news-2161 reders \")}\r\n            {newsArticle(\"linkedln react redux project\",\"Top news-2161 reders \")}\r\n            {newsArticle(\"linkedln react redux project\",\"Top news-2161 reders \")}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets\r\n","import React, { useEffect } from 'react';\nimport Header from './Header';\nimport Sidebar from './Sidebar'\nimport './App.css';\nimport Feed from './Feed';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectUser } from './features/features/userSlice';\nimport Login from './Login';\nimport { auth } from './firebase';\nimport { login,logout } from './features/features/userSlice'\nimport Widgets from './Widgets';\n\nfunction App() {\n  const user = useSelector(selectUser)\n  const dispatch = useDispatch();\n  useEffect(()=>  {\n    auth.onAuthStateChanged((userAuth)=>  {\n      if(userAuth){\n        //user logged in\n        dispatch(\n          login ({\n          email : userAuth.email,\n          uid : userAuth.uid,\n          displayName :userAuth.displayName,\n          photoUrl : userAuth.photoURL\n      }))\n      }else{\n         // user logout\n         dispatch(logout())\n      }\n    });\n  },[] );\n  return (\n    <div className=\"app\">\n     {/* <h1>Linkedln clone started</h1> */}\n     {/* Header */}\n     <Header/>\n     {!user? (<Login/>) :\n     (\n        //  {/* App bar */}\n         <div  className =\"app_body\">\n                    {/* Side bar */}\n             <Sidebar></Sidebar>\n         {/* Feed */}\n                   <Feed/>\n                   <Widgets></Widgets>\n        </div>\n \n     )}\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}